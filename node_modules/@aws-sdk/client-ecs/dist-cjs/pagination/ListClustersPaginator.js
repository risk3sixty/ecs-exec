"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.paginateListClusters = void 0;
const ListClustersCommand_1 = require("../commands/ListClustersCommand");
const ECS_1 = require("../ECS");
const ECSClient_1 = require("../ECSClient");
const makePagedClientRequest = async (client, input, ...args) => {
    return await client.send(new ListClustersCommand_1.ListClustersCommand(input), ...args);
};
const makePagedRequest = async (client, input, ...args) => {
    return await client.listClusters(input, ...args);
};
async function* paginateListClusters(config, input, ...additionalArguments) {
    let token = config.startingToken || undefined;
    let hasNext = true;
    let page;
    while (hasNext) {
        input.nextToken = token;
        input["maxResults"] = config.pageSize;
        if (config.client instanceof ECS_1.ECS) {
            page = await makePagedRequest(config.client, input, ...additionalArguments);
        }
        else if (config.client instanceof ECSClient_1.ECSClient) {
            page = await makePagedClientRequest(config.client, input, ...additionalArguments);
        }
        else {
            throw new Error("Invalid client, expected ECS | ECSClient");
        }
        yield page;
        token = page.nextToken;
        hasNext = !!token;
    }
    return undefined;
}
exports.paginateListClusters = paginateListClusters;
